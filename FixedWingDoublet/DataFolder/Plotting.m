clear all
restoredefaultpath
filename='Case3'; %Change the folder name you want to work in

addpath(['C:\Users\zakiaahmed\Documents\GitHub\Predictor-Simulations\FixedWingDoublet\DataFolder\',filename])

for i=1:10
    data(i)=load(['data_',num2str(i),'.mat']);
    info(1,1)=data(i).data.Ts;
    info(1,2)=data(i).data.d1+data(i).data.d2;
    info(1,3)=data(i).data.noise_factor; 
    info(1,4)=data(i).data.doublet_amplitude; %replace later with amplitude
    
    nstart=(data(i).data.d1+data(i).data.d2)/data(i).data.Ts + 1;
end

    y=[data(1).data.undelayed_measurement(:,nstart+1:end-1)];
   
       t=data(1).data.total_time(nstart+1:end-1);
  N=length(t);
for j=1:12
        ySP=[data(1).data.SP_output(j,1:end-1);...
         data(2).data.SP_output(j,1:end-1);...
         data(3).data.SP_output(j,1:end-1);...
         data(4).data.SP_output(j,1:end-1);...
         data(5).data.SP_output(j,1:end-1);...
         data(6).data.SP_output(j,1:end-1);...
         data(7).data.SP_output(j,1:end-1);...
         data(8).data.SP_output(j,1:end-1);...
         data(9).data.SP_output(j,1:end-1);...
         data(10).data.SP_output(j,1:end-1)];
    yKP=[data(1).data.KP_output(j,1:end-1);...
         data(2).data.KP_output(j,1:end-1);...
         data(3).data.KP_output(j,1:end-1);...
         data(4).data.KP_output(j,1:end-1);...
         data(5).data.KP_output(j,1:end-1);...
         data(6).data.KP_output(j,1:end-1);...
         data(7).data.KP_output(j,1:end-1);...
         data(8).data.KP_output(j,1:end-1);...
         data(9).data.KP_output(j,1:end-1);...
         data(10).data.KP_output(j,1:end-1)];
    yEKP=[data(1).data.EKP_output(j,:);...
          data(2).data.EKP_output(j,:);...
          data(3).data.EKP_output(j,:);...
          data(4).data.EKP_output(j,:);...
          data(5).data.EKP_output(j,:);...
          data(6).data.EKP_output(j,:);...
          data(7).data.EKP_output(j,:);...
          data(8).data.EKP_output(j,:);...
          data(9).data.EKP_output(j,:);...
          data(10).data.EKP_output(j,:)];
          
      for n=1:N
            avg_SP(j,n)=mean(ySP(:,n));
            avg_KP(j,n)=mean(yKP(:,n));
            avg_EKP(j,n)=mean(yEKP(:,n));
          end
end

%%
Labels={'X, m', 'Y, m', 'Z, m', '\Phi, deg', '\Theta, deg', '\Psi, deg', 'u, m/s', 'v, m/s', 'w, m/s', 'p, deg/s', 'q, deg/s', 'r, deg/s'};

figure
nplot=3;
plot(t,y(nplot,:),'k-','LineWidth',1.5)
hold on
plot( t,avg_SP(nplot,:),'r-',t,avg_KP(nplot,:),'b-',t,avg_EKP(nplot,:),'g-','LineWidth',1.25)

for iter = 1:N
    kalman_vec(:,iter) =avg_KP(nplot, iter);
    smith_vec(:,iter) = avg_SP(nplot, iter);
    ext_kalman_vec(:,iter)=avg_EKP(nplot,iter);
    plot([t(iter), t(iter)], [smith_vec(1,iter), y(nplot,iter)], 'r--')
    end


%patch([t',fliplr(t')], [y(nplot,:) fliplr(avg_SP(nplot,:))], 'b')
%alpha(0.1)
legend('Actual','SP', 'KP', 'EKP','SP error')
ylim([-85 -50])
xlim([8 18])
xlabel('Time, s')
set(gca, 'FontSize',14)
ylabel(Labels(nplot))

