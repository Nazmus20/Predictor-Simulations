function [ex_dot, Acl, Bcl] = MultirotorError(Param, fx, gx, XD)

syms e_x e_y e_z e_phi e_theta e_psi e_u e_v e_w e_p e_q e_r xD yD zD ...
    phiD thetaD psiD uD vD wD pD qD rD e_u_TD e_u_phiD e_u_thetaD ...
    e_u_psiD u_TD u_phiD u_thetaD u_psiD real;

%f(e_x+x_D)
f1 = subs(fx, [Param.states(1);Param.states(2);Param.states(3); ...
    Param.states(4); Param.states(5); Param.states(6); Param.states(7); ...
    Param.states(8); Param.states(9); Param.states(10); ...
    Param.states(11); Param.states(12)], [e_x+xD; e_y+yD; e_z+zD; ...
    e_phi+phiD; e_theta+thetaD; e_psi+psiD; e_u+uD; e_v+vD; e_w+wD; ...
    e_p+pD; e_q+qD; e_r+rD]);

f2 = subs(fx, [Param.states(1);Param.states(2);Param.states(3); ...
    Param.states(4); Param.states(5); Param.states(6); Param.states(7); ...
    Param.states(8); Param.states(9); Param.states(10); ...
    Param.states(11); Param.states(12)], [xD; yD; zD; phiD; thetaD; ...
    psiD; uD; vD; wD; pD; qD; rD]);

ex_dot = f1-f2+gx*[e_u_TD+u_TD; e_u_phiD+u_phiD; e_u_thetaD+u_thetaD; ...
    e_u_psiD+u_psiD] - gx*[u_TD; u_phiD; u_thetaD; u_psiD];

Bcl = jacobian(ex_dot, [e_u_TD; e_u_phiD; e_u_thetaD; e_u_psiD]);

Acl = jacobian(ex_dot, [e_x; e_y; e_z; e_phi; e_theta; e_psi; e_u; e_v; ...
    e_w; e_p; e_q; e_r]);

Acl = vpa(subs(Acl, [e_x; e_y; e_z; e_phi; e_theta; e_psi; e_u; e_v; ...
    e_w; e_p; e_q; e_r; xD; yD; zD; phiD; thetaD; psiD; uD; vD; wD; ...
    pD; qD; rD], [0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; XD(1); XD(2); ...
    XD(3); XD(4); XD(5); XD(6); XD(7); XD(8); XD(9); XD(10); XD(11); ...
    XD(12);]));
Bcl = vpa(subs(Bcl, [e_x; e_y; e_z; e_phi; e_theta; e_psi; e_u; e_v; ...
    e_w; e_p; e_q; e_r; xD; yD; zD; phiD; thetaD; psiD; uD; vD; wD; ...
    pD; qD; rD], [0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; XD(1); XD(2); ...
    XD(3); XD(4); XD(5); XD(6); XD(7); XD(8); XD(9); XD(10); XD(11); ...
    XD(12);]));